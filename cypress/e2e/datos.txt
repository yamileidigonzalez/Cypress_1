
  Scenario: Login fallido con credenciales inválidas
    Given que el usuario está en la página de login
    When ingresa un nombre de usuario "admin" y una contraseña "incorrecta"
    And presiona el botón de login
    Then el sistema debe mostrar un mensaje de error "Credenciales inválidas"

  Scenario: Intento de login con campos vacíos
    Given que el usuario está en la página de login
    When no ingresa un nombre de usuario o contraseña
    And presiona el botón de login
    Then el sistema debe mostrar un mensaje "Por favor, complete todos los campos"



--------------------------------------------------------------
//const { createEsbuildPlugin } = require('@badeball/cypress-cucumber-preprocessor/esbuild');
const { Given, When, Then } = require('@cucumber/cucumber');
const assert = require('assert');

// Simulación de base de datos de usuarios
const usuarios = [
    { username: "solverpay", password: "r7auF23wA.A2l1tZ2Dp4" },
    { username: "user1", password: "password" }
];
//cy.visit('https://51.178.137.167/login'); //cy.title().should('eq','Inicio de sesión')
//LOGIN
//cy.get(':nth-child(1) > .form-control').should("be.visible").should("be.enabled").type('solverpay')
//cy.get('.d-flex > .form-control').should("be.visible").should("be.enabled").type('r7auF23wA.A2l1tZ2Dp4{enter}') //cy.get('.btn').click()


// Variables para simular el estado del sistema
let currentUsername = "";
let currentPassword = "";
let mensaje = "";

Given('que el usuario está en la página de login', () => {
    cy.visit('https://newfront.lab.solverpay.com/login')
    // Reseteamos las variables de estadoconst { Given, When, Then } = require('@cucumber/cucumber');
const assert = require('assert');

Given('que el usuario está en la página de login', function () {
    // Reseteamos las variables de estado
    currentUsername = "";
    currentPassword = "";
    mensaje = "";
});

When('ingresa un nombre de usuario {string} y una contraseña {string}', function (username, password) {
    currentUsername = username;
    currentPassword = password;
});

When('no ingresa un nombre de usuario o contraseña', function () {
    currentUsername = "";
    currentPassword = "";
});

When('presiona el botón de login', function () {
    if (!currentUsername || !currentPassword) {
        mensaje = "Por favor, complete todos los campos";
        return;
    }

    const usuarioValido = usuarios.find(
        user => user.username === currentUsername && user.password === currentPassword
    );

    if (usuarioValido) {
        mensaje = `Bienvenido, ${currentUsername}`;
    } else {
        mensaje = "Credenciales inválidas";
    }
});

Then('el sistema debe mostrar un mensaje {string}', function (expectedMessage) {
    assert.strictEqual(mensaje, expectedMessage);
});const { Given, When, Then } = require('@cucumber/cucumber');
const assert = require('assert');

// Simulación de base de datos de usuarios
const usuarios = [
    { username: "admin", password: "1234" },
    { username: "user1", password: "password" }
];

// Variables para simular el estado del sistema
let currentUsername = "";
let currentPassword = "";
let mensaje = "";

Given('que el usuario está en la página de login', function () {
    // Reseteamos las variables de estado
    currentUsername = "";
    currentPassword = "";
    mensaje = "";
});

When('ingresa un nombre de usuario {string} y una contraseña {string}', function (username, password) {
    currentUsername = username;
    currentPassword = password;
});

When('no ingresa un nombre de usuario o contraseña', function () {
    currentUsername = "";
    currentPassword = "";
});

When('presiona el botón de login', function () {
    if (!currentUsername || !currentPassword) {
        mensaje = "Por favor, complete todos los campos";
        return;
    }

    const usuarioValido = usuarios.find(
        user => user.username === currentUsername && user.password === currentPassword
    );

    if (usuarioValido) {
        mensaje = `Bienvenido, ${currentUsername}`;
    } else {
        mensaje = "Credenciales inválidas";
    }
});

Then('el sistema debe mostrar un mensaje {string}', function (expectedMessage) {
    assert.strictEqual(mensaje, expectedMessage);
});


    currentUsername = "";
    currentPassword = "";
    mensaje = "";
});

When('ingresa un nombre de usuario {string} y una contraseña {string}', function (username, password) {
    currentUsername = username;
    currentPassword = password;
});

When('no ingresa un nombre de usuario o contraseña', function () {
    currentUsername = "";
    currentPassword = "";
});

When('presiona el botón de login', function () {
    if (!currentUsername || !currentPassword) {
        mensaje = "Por favor, complete todos los campos";
        return;
    }

    const usuarioValido = usuarios.find(
        user => user.username === currentUsername && user.password === currentPassword
    );

    if (usuarioValido) {
        mensaje = `Bienvenido, ${currentUsername}`;
    } else {
        mensaje = "Credenciales inválidas";
    }
});

Then('el sistema debe mostrar un mensaje {string}', function (expectedMessage) {
    assert.strictEqual(mensaje, expectedMessage);
});
